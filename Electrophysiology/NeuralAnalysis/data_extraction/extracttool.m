function extracttool(figNum,soefig)

global initextractpathNLT;
[Y,M,D]=datevec(date);
initdir = [initextractpathNLT sprintf('%.4i-%.2i-%.2i',Y,M,D)];
%NelsonLabToolsInit;

if nargin==0,
	fig=figure;set(fig,'MenuBar','none');settoolbar(fig,'none');
	drawextracttool(fig,initdir);
	extracttool('updatecksds',fig);

elseif ~ischar(figNum),  % is the call described above
        fig = figNum; figure(fig); clf; set(fig,'MenuBar','none');
	if nargin==1, Soefig = initdir; else, Soefig = soefig; end;
        drawextracttool(fig,Soefig);
	extracttool('updatecksds',fig);

else, % it is a callback
        command = figNum;
        theFig = gcbf;
        if isempty(theFig)&nargin~=2, theFig = gcf;
        elseif nargin==2,theFig = soefig; end;
        estruct= get(theFig,'UserData');
        datalist = estruct.DataList;
	aelist   = estruct.AutoextractList;
	cksds = estruct.cksds;
        switch command,
                case 'updatecksds',
			if isempty(cksds), % try to create it
			   try,
			     g=get(estruct.DirEditText,'String');
			     cksds=cksdirstruct(g),
			     estruct.cksds = cksds;
			     set(theFig,'UserData',estruct);
			     extracttool('updatedisp',theFig);
			   catch,
			     errordlg('Could not create--directory not valid.');
			   end;
			else,
			   %try,
				cksds=update(cksds);
			        estruct.cksds = cksds;
				set(theFig,'UserData',estruct);
				extracttool('updatedisp',theFig);
			   %catch,
			%	errordlg('Could not update.');
			%   end;
			end;

		case 'updatedisp',
			if ~isempty(cksds),
			  g = getallnamerefs(cksds); strs = {};
			  for i=1:length(g),
				%should not fail
				[z1,z2]=getextractors(cksds,g(i).name,g(i).ref);
				strs = cat(2,strs,{[g(i).name ' | ' ...
					int2str(g(i).ref) ' | ' z1 ',' z2 ]});
			  end;
			  set(datalist,'String',strs);
			  z = getautoextractorlist(cksds); strs = {};
			  for i=1:length(z),
			    % should not fail
			    strs=cat(2,strs,{[z(i).type ' | ' ...
				z(i).extractor1 ' | ' z(i).extractor2]});
			  end;
			  set(aelist,'String',strs);
                          thedirlist=getalltests(cksds);
                          oldv=get(estruct.ExtractDirList,'value');
                          set(estruct.ExtractDirList,'String',thedirlist,...
                               'value',[]);
			end;
                          tmpstr1 = setdiff(listofvars('extractoperator'),...
                                 listofvars('secondaryextractoperator'));
                          tmpstr1 = reshape(tmpstr1,1,length(tmpstr1));
			set(estruct.Extractors1Popup,'value',1,'String',...
			   cat(2,{'none'},tmpstr1));
                          tmpstr = listofvars('secondaryextractoperator');
                          tmpstr = reshape(tmpstr,1,length(tmpstr));
			set(estruct.Extractors2Popup,'value',1,'String',...
			   cat(2,{'none'},tmpstr));
			set(estruct.AEExtractor1Popup,'value',1,'String',...
			   cat(2,{'none'},tmpstr1));
			set(estruct.AEExtractor2Popup,'value',1,'String',...
			   cat(2,{'none'},tmpstr));
			str = listofvars('extractoperator');
			if isempty(str), str = ' '; end;
			set(estruct.EditExtractorPopup,'String',str,'value',1);
                case 'UpdateViewButton',
                        v=get(datalist,'value');
                        if length(v)==1,
                          set(estruct.dataview,'Enable','on');
                        else, set(estruct.dataview,'Enable','off');
                        end;
		case 'MakeNewBt',
			estruct.cksds = [];
			set(theFig,'UserData',estruct);
			extracttool('updatecksds',theFig);
		case 'SelectAll1Bt',
			set(datalist,'Value',1:length(get(datalist,'String')));
		case 'SelectAll2Bt',
			set(aelist,'Value',1:length(get(aelist,'String')));
                case 'SelectAllEDBt',
                        set(estruct.ExtractDirList,'Value',...
                            1:length(get(estruct.ExtractDirList,'String')));
                case 'neuter',
                        z = get(estruct.ExtractDirList,'Value');
                        if ~isempty(z),
                          conf = questdlg('Really remove these directories?',...
                                   'Are you sure','Yes','No','No');
                          if strcmp(conf,'Yes'),
                               d=getpathname(estruct.cksds);
                               str=get(estruct.ExtractDirList,'String');
                               for i=1:length(z),
                                  copyfile([d str{z} filesep 'acqParams_out'],...
                                           [d str{z} filesep 'acqParams_oot']);
                                  delete([d str{z} filesep 'acqParams_out']);
                                      % don't remove files, just remove parameter marker
                               end;
                          end;   
                        end;
%                case 'livefeed',
%                        z = get(estruct.ExtractDirList,'Value');
%                        if length(z)==1,
%                           
%                        else,errordlg('Must select only 1 directory!');
%                        end;
                case 'dataview',
                     k = 0;
                     seld=get(datalist,'value');
                     if length(seld)>5,
                        k=menu('Sure you want to view all those items?',...
                               'Yes','No');
                     elseif length(seld)~=0, k = 1;
                     end;
                     if k==1,
                        where.units='normalized';where.rect=[0 0 1 1];
                        where.figure=figure;
			g = getallnamerefs(cksds);
                        md = {};
                        for i=1:length(seld),
                           g(seld(i)),
                           mdt = cksmeasureddata(getpathname(cksds),...
                                   g(seld(i)).name,g(seld(i)).ref,[],[]);
                           md=cat(1,md,{mdt});
                        end; 
                        md,
                        mdd=measureddatadisplay(struct('measureddata',{md}),...
                             'default',where);
                     end;
		case 'SetExtractors',
			g = getallnamerefs(cksds);
			v = get(datalist,'Value');
			e1s = get(estruct.Extractors1Popup,'String');
			e1v = get(estruct.Extractors1Popup,'Value');
			e2s = get(estruct.Extractors2Popup,'String');
			e2v = get(estruct.Extractors2Popup,'Value');
			st1 = e1s{e1v}; st2 = e2s{e2v};
			if strcmp(st1,'none')st1='';end;
			if strcmp(st2,'none')st2='';end;
			for i=1:length(v),
				cksds=setextractortype(cksds,g(v(i)).name,...
				  g(v(i)).ref,st1,st2);
			end;
			estruct.cksds = cksds;
			set(theFig,'UserData',estruct);
			extracttool('updatedisp',theFig);
		case 'NewAE',
			st = signaltypes;
			e1s = get(estruct.AEExtractor1Popup,'String');
			e1v = get(estruct.AEExtractor1Popup,'Value');
			e2s = get(estruct.AEExtractor2Popup,'String');
			e2v = get(estruct.AEExtractor2Popup,'Value');
			st1 = e1s{e1v}; st2 = e2s{e2v};
			if strcmp(st1,'none')st1='';end;
			if strcmp(st2,'none')st2='';end;
			[s,v]=listdlg('PromptString','Choose type...',...
			   'SelectionMode','single','ListString',st);
			if ~isempty(s),
				cksds=setautoextractortype(cksds,st{s},st1,st2);
			end;
			estruct.cksds = cksds;
			set(theFig,'UserData',estruct);
			extracttool('updatedisp',theFig);
		case 'AEDelete',
			z = getautoextractorlist(cksds);
			v = get(aelist,'Value');
			for i=1:length(v),
			  cksds=removeautoextractortype(cksds,z(v(i)).type);
			end;
			estruct.cksds = cksds; set(theFig,'UserData',estruct);
			extracttool('updatedisp',theFig);
		case 'AEChange',
			e1s = get(estruct.AEExtractor1Popup,'String');
			e1v = get(estruct.AEExtractor1Popup,'Value');
			e2s = get(estruct.AEExtractor2Popup,'String');
			e2v = get(estruct.AEExtractor2Popup,'Value');
			st1 = e1s{e1v}; st2 = e2s{e2v};
			if strcmp(st1,'none')st1='';end;
			if strcmp(st2,'none')st2='';end;
			z = getautoextractorlist(cksds);
			v = get(aelist,'Value');
			for i=1:length(v),
			 cksds=setautoextractortype(cksds,z(v(i)).type,st1,st2);
			end;
			estruct.cksds = cksds; set(theFig,'UserData',estruct);
			extracttool('updatedisp',theFig);
		case 'NewExtractor',
			makeNewFig(gcbf);
		case 'NewOK',
                        newstr = get(gcbf,'UserData');
                        % check for syntax
                        str = get(newstr.name,'String');
                        ty = char(lb_getselected(newstr.lb));
                        try, evalin('base',[str '=' ty  '(''graphical'');']);
                                close(gcbf);
                                figure(newstr.parentFig);
                                extracttool updatedisp;
                        catch, errordlg(['Syntax error in name: ' str],'Error');
                        end;
		case 'EditExtractor',
			s = get(estruct.EditExtractorPopup,'String');
			v = get(estruct.EditExtractorPopup,'value');
			if strcmp(class(s),'char'),  % do nothing 
			else,
				try, 	exop=evalin('base',s{v});
					edit_graphical(exop,struct('cksdirstruct',cksds,'name',s{v}));
				catch,errordlg(['Couldn''t find ' s{v} '.']);end;
			end;
		case 'ExtractData',
			instruc = struct('extractincompletedir',...
				get(estruct.ExtractIncompleteCheck,'value'));
                        actdirlist=lb_getselected(estruct.ExtractDirList);
                        cksds=setactive(cksds,actdirlist,0);
			[cksds,status] = extract(cksds,instruc),
			estruct.cksds = cksds;
			set(theFig,'UserData',estruct);
		case 'awaitinstr',
			fname=[sharedir 'extractscriptin.m'];
			g=msgbox('Please wait','Please Wait');
			x=findobj(g,'Style','Pushbutton');set(x,'String','Cancel');
			while ishandle(g),
				drawnow; dowait(1); txt=checkscript(fname);
				if ~isempty(txt), eval(txt); delete fname; end;
			end;
			if ishandle(g), delete(g); end;
	end;
end;

function drawextracttool(h0,initdir)
set(h0,'Color',[0.8 0.8 0.8], ...
	'PaperPosition',[18 180 576 432], ...
	'PaperUnits','points', ...
	'Position',[321 116 703 772], ...
	'Tag','Fig1', ...
	'MenuBar','none');
	settoolbar(h0,'none');
MakeNewBt = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[238.4 541.6 59.2 19.2], ...
	'String','Make New', ...
	'Tag','Pushbutton1','Callback','extracttool MakeNewBt');
DirEditText = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'ListboxTop',0, ...
	'Position',[64 540 168.8 19.2], ...
	'String',initdir, ...
	'Style','edit', ...
	'Tag','EditText1');
extractdirlabel=uicontrol('Parent',h0,...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[330 508.8 177.6 17.6], ...
	'String','Directories to extract', ...
	'Style','text', ...
	'Tag','StaticText3');
ExtractDirList = uicontrol('Parent',h0,...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'Position',[330 356 177.6 154.4], ...
	'String',{}, ...
	'Style','listbox', ...
	'Tag','Listbox1', ...
	'Value',[],'Max',2);
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[25.6 540.8000000000001 34.4 16], ...
	'String','Dir:', ...
	'Style','text', ...
	'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'FontSize',16, ...
	'FontWeight','bold', ...
	'ListboxTop',0, ...
	'Position',[40.8 571.2 226.4 20.8], ...
	'String','Extractor Manager', ...
	'Style','text', ...
	'Tag','StaticText1');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[20 508.8 263.2 17.6], ...
	'String','Data: name | reference | primary extractor, secondary e.', ...
	'Style','text', ...
	'Tag','StaticText3');
DataList = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'Position',[21.6 356 277.6 154.4], ...
	'String',{}, ...
	'Style','listbox', ...
	'Tag','Listbox1', ...
	'Value',[],'Max',2,'Callback','extracttool UpdateViewButton');
SelectAll1Bt = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[23.2 327.2 54.4 22.4], ...
	'String','Select All', ...
	'Tag','Pushbutton2','Callback','extracttool SelectAll1Bt');
%livefeedbt = uicontrol('Parent',h0, ...
%	'Units','points', ...
%	'BackgroundColor',[0.8 0.8 0.8], ...
%	'ListboxTop',0, ...
%	'Position',[450 327.2 54.4 22.4], ...
%	'String','Live Feed', ...
%	'Tag','livefeedBt','Callback','extracttool livefeed');
neuterbt= uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[385 327.2 65 22.4], ...
	'String','Remove Test', ...
	'Tag','neuterBt','Callback','extracttool neuter');
dataview = uicontrol('Parent',h0,...
        'Units','points',...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[85.2 318.4 40.4 22.4], ...
	'String','View','Enable','off', ...
	'Tag','Pushbutton2','Callback','extracttool dataview');
SelectAllEDBt = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[330 327.2 54.4 22.4], ...
	'String','Select All', ...
	'Tag','Pushbutton2','Callback','extracttool SelectAllEDBt');
SetExtractorsBt = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[128.8 318.4 75 22.4], ...
	'String','Set extractors:', ...
	'Tag','Pushbutton2','Callback','extracttool SetExtractors');
Extractors1Popup = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Min',1, ...
	'Position',[225.6 328 72 23.2], ...
	'String',{'none'}, ...
	'Style','popupmenu', ...
	'Tag','PopupMenu1', ...
	'Value',1);
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[211.2 330.4 10.4 15.2], ...
	'String','1', ...
	'Style','text', ...
	'Tag','StaticText4');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[206.4 305.6 18.4 18.4], ...
	'String','2', ...
	'Style','text', ...
	'Tag','StaticText4');
Extractors2Popup = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Min',1, ...
	'Position',[224.8 303.2 72 23.2], ...
	'String',{'none'}, ...
	'Style','popupmenu', ...
	'Tag','PopupMenu1', ...
	'Value',1);
UpdateBt = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[23.2 297.6 54.40000000000001 22.4], ...
	'String','Update', ...
	'Tag','Pushbutton2','Callback','extracttool updatecksds');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[36.8 188 248.8 18.4], ...
	'String','automatic extractor assignments (type | extractors):', ...
	'Style','text', ...
	'Tag','StaticText5');
AutoextractList = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'Position',[27.2 89.60000000000001 264.8 96], ...
	'String',{}, ...
	'Style','listbox', ...
	'Tag','Listbox3', ...
	'Value',[],'Max',2);
AEExtractor2Popup = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Min',1, ...
	'Position',[218.4 36.8 72 23.2], ...
	'String',{'none'}, ...
	'Style','popupmenu', ...
	'Tag','PopupMenu1', ...
	'Value',1);
AEExtractor1Popup = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Min',1, ...
	'Position',[219.2 61.6 72 23.2], ...
	'String',{'none'}, ...
	'Style','popupmenu', ...
	'Tag','PopupMenu1', ...
	'Value',1);
SelectAll2Bt = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[32.8 60 54.40000000000001 22.4], ...
	'String','Select All', ...
	'Tag','Pushbutton2','Callback','extracttool SelectAll2Bt');
DeleteBt = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[32.8 32.8 54.40000000000001 22.4], ...
	'String','Delete', ...
	'Tag','Pushbutton2','Callback','extracttool AEDelete');
NewBt = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[97.60000000000001 60.8 54.40000000000001 22.4], ...
	'String','New', ...
	'Tag','Pushbutton2','Callback','extracttool NewAE');
ChangeBt = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[97.60000000000001 32.8 54.40000000000001 22.4], ...
	'String','Change', ...
	'Tag','Pushbutton2','Callback','extracttool AEChange');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[198.4 38.40000000000001 18.4 18.4], ...
	'String','2', ...
	'Style','text', ...
	'Tag','StaticText4');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[202.4 62.40000000000001 10.4 15.2], ...
	'String','1', ...
	'Style','text', ...
	'Tag','StaticText4');
NewExtractorBt = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[20 265.6 100 20], ...
	'String','New Extractor', ...
	'Tag','Pushbutton2','Callback','extracttool NewExtractor');
ExtractDataBt = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'FontWeight','bold', ...
	'ListboxTop',0, ...
	'Position',[20 246 100 20], ...
	'String','Extract data', ...
	'Tag','Pushbutton2','Callback','extracttool ExtractData');
AwaitInstructBt = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'FontWeight','bold', ...
	'ListboxTop',0, ...
	'Position',[20 226 100 20], ...
	'String','Await Instructions', ...
	'Tag','Pushbutton2','Callback','extracttool awaitinstr');
ExtractIncompleteCheck = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[121.6 236 162.4 22.4], ...
	'String','extract incomplete directories', ...
	'Style','checkbox', ...
	'Tag','Checkbox1');
EditExtractorBt = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[127.2 263.2 80.80000000000001 22.4], ...
        'String','Edit Extractor:', ...
        'Tag','Pushbutton2','Callback','extracttool EditExtractor');
EditExtractorPopup = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Min',1, ...
        'Position',[210.4 263.2 72 23.2], ...
        'String','none', ...
        'Style','popupmenu', ...
        'Tag','PopupMenu1', ...
        'Value',1);


set(h0,'UserData',struct('MakeNewBt',MakeNewBt,'DirEditText',DirEditText,...
	'DataList',DataList,'SelectAll1Bt',SelectAll1Bt,...
	'SetExtractorsBt',SetExtractorsBt,'Extractors1Popup',...
	Extractors1Popup,'Extractors2Popup',Extractors2Popup,...
	'UpdateBt',UpdateBt,'AutoextractList',AutoextractList,...
	'AEExtractor1Popup',AEExtractor1Popup,...
	'AEExtractor2Popup',AEExtractor2Popup,'SelectAll2Bt',SelectAll2Bt,...
	'DeleteBt',DeleteBt,'NewBt',NewBt,'ChangeBt',ChangeBt,...
	'NewExtractorBt',NewExtractorBt,'ExtractDataBt',ExtractDataBt,...
	'ExtractIncompleteCheck',ExtractIncompleteCheck,...
	'EditExtractorBt',EditExtractorBt,'EditExtractorPopup',...
	EditExtractorPopup,'cksds',[],'tag','extracttool',...
        'ExtractDirList',ExtractDirList,'SelectAllEDBt',SelectAllEDBt,...
        'dataview',dataview));

function makeNewFig(figNum)

h0 = figure('Color',[0.8 0.8 0.8], ...
        'PaperPosition',[18 180 576 432], ...
        'PaperUnits','points', ...
        'Position',[402 204 350 239], ...
        'Tag','Fig2', ...
        'MenuBar','none');
		settoolbar(h0,'none');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[71.2 9.6 63.2 24.8], ...
        'String','OK', ...
        'Tag','Pushbutton1','Callback',...
		['extracttool(''NewOK'', ' int2str(figNum) ');']);
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',14, ...
        'FontWeight','bold', ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[14.4 40 50.4 19.2], ...
        'String','Name:', ...
        'Style','text', ...
        'Tag','StaticText1');
namectl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'ListboxTop',0, ...
        'Position',[68.8 37.6 197.6 24.8], ...
        'Style','edit', ...,
        'HorizontalAlignment','left',...
        'Tag','EditText1');
lb = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'Position',[19.2 80 244 77.6], ...
        'String',extractortypes, ...
        'Style','listbox', ...
        'Tag','Listbox1', ...
        'Value',1);
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',14, ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[10.4 163.2 100.8 17.6], ...
        'String','Extractor type:', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[152.8 9.6 63.2 24.8], ...
        'String','Cancel', ...
        'Tag','Pushbutton1','Callback','close(gcbf);');
set(h0,'UserData',struct('lb',lb,'name',namectl,'parentFig',figNum));

