function fig = control_db( db, color)
%CONTROL_DB opens a control panel for a structure database
%
%  FIG = CONTROL_DB( DB )
%  FIG = CONTROL_DB( DB, COLOR )
%
%  DB can be a structarray or a filename
%  COLOR is 1x3 RGB vector which will be used as backgroundcolor,
%     i.e. [1 0 0] is red.
%  FIG is a handle to the control panel.
%
%  To change the fields use ADMIN_DB
%
%  To get record that is currently being shown, click on [Help].
%  After this the database and current record are available, by
%     global global_db global_record
%
%  Check at
%  https://github.com/heimel/InVivoTools/wiki
%  for a full manual describing the InVivoTools
%
%  Appearance can be set in processparams_local.m file in path 
%
%  2005-2020, Alexander Heimel
%

if nargin<2
    color = 0.7*[1 1 1];
end

ud.record_form = [];
ud.changed = 0;
ud.perm = 'rw';
ud.lockfile = [];

if nargin<1
    [db,ud.filename,ud.perm,ud.lockfile] = open_db;
elseif ~isstruct(db)
    if exist(db,'file') || exist([db '.mat'],'file')
        [db,ud.filename,ud.perm,ud.lockfile] = open_db(db);
    else
        fig = [];
        logmsg(['Database ' db ' does not exist.']);
        return
    end
else
    ud.filename='';
end

if isempty(db)
    logmsg('No database selected or loaded');
    fig = [];
    return
end


ud.backgroundcolor = 0.8*[1 1 1];
ud.basefontsize = 10; % pt 
ud.buttonwidth = 65; 
ud.buttonheight = 30; 
ud.figwidth = 510; 
ud.figheight = 140; 

if exist('processparams_local.m','file')
    params = processparams_local;
    if isfield(params,'db_basefontsize')
        ud.basefontsize = params.db_basefontsize;
    end
    if isfield(params,'db_buttonwidth')
        ud.buttonwidth = params.db_buttonwidth;
    end
    if isfield(params,'db_buttonheight')
        ud.buttonheight = params.db_buttonheight;
    end
    if isfield(params,'db_figheight')
        ud.figheight = params.db_figheight;
    end
    if isfield(params,'db_figwidth')
        ud.figheight = params.db_figwidth;
    end

end

ud.db = db;
ud.current_record = length(ud.db);

screensize = get(0,'ScreenSize');


leftp = 0;
topp = screensize(4)-ud.figheight-60;
w = get(0,'children');
for c = w(:)'
    wud = get(c,'userdata');
    if isfield(wud,'persistent')&&wud.persistent
        p = get(c,'outerposition');
        leftp = max(leftp,p(1)+p(3));
    end
end
screensize = get(0,'ScreenSize');
if leftp>screensize(3)-ud.figwidth
    leftp = 0;
    topp = topp-200;
end

h.fig = ...
    figure('Name','Database control',... %  'Color',ud.backgroundcolor,...
    'WindowStyle','normal',...
    'Position',[leftp topp ... % top left
    ud.figwidth ud.figheight], ...
    'Tag','control_db_callback', ...
    'Units','pixels',...
    'ToolBar','none',...
    'color',color);

set(h.fig,'MenuBar','none');
set(h.fig,'NumberTitle','off');

drawnow

ud.type = 'generic'; % type of database


colsep = 3;
leftmargin = 10;
maxleft = 0;
left = leftmargin;
top = ud.figheight-ud.buttonheight;

% define button style
% button.Units = 'pixels';
% button.BackgroundColor = [0.8 0.8 0.8];
% button.HorizontalAlignment = 'center';
% button.Callback = 'genercallback';
% button.Style = 'pushbutton';

% define text style
% txt.Units = 'pixels';
% txt.BackgroundColor = [0.8 0.8 0.8];
% %txt.fontsize = 20;
% txt.fontname = 'arial';
% txt.fontweight = 'normal';
% txt.HorizontalAlignment = 'center';
% txt.Style = 'text';

% define edit style
% edit = txt;
% edit.BackgroundColor = [ 1 1 1];
% edit.Style = 'Edit';
% edit.Enable = 'inactive'; % for enable_editclick_notification

%define popup style
% popup = txt;
% popup.Style = 'popupmenu';

%define list style
% listbox = button;
% listbox.Style = 'list';

%define checkbox style
% cb = txt;
% cb.Style = 'Checkbox';
% cb.Callback = 'genercallback';
%cb.fontsize = 12;

%define togglebutton style
% tb = button;
% tb.Style = 'ToggleButton';

h.first = uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth/2 ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','|<', ...
    'Tag','first',...
    'Tooltipstring','Go to first record');
left = left+ud.buttonwidth/2+colsep;
maxleft = max(maxleft,left);

h.prev = uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth/2 ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','<', ...
    'FontSize',ud.basefontsize,...
    'Tag','previous',...
    'Tooltipstring','Go to previous record');
left = left+ud.buttonwidth/2+colsep;
maxleft = max(maxleft,left);

h.current_record = ...
    uicontrol('Parent',h.fig, ...
    'Callback','genercallback', ...
    'Style','edit', ...
    'Units','pixels', ...
    'BackgroundColor',[1 1 1],...
    'ListboxTop',0, ...
    'Position',[left top+4 48 ud.buttonheight-8], ...
    'String',num2str(ud.current_record), ...
    'FontSize',ud.basefontsize,...
    'Tag','current',...
    'Tooltipstring','Current record number');
left = left+48+colsep;
maxleft = max(maxleft,left);

h.count = uicontrol('Parent',h.fig, ...
    'Callback','genercallback', ...
    'Style','text', ...
    'Units','pixels', ...
    'BackgroundColor',color,...
    'ListboxTop',0, ...
    'Position',[left top-4 74 ud.buttonheight-3], ...
    'String',num2str( length(ud.db) ), ...
    'FontSize',ud.basefontsize,...
    'Tag','current',...
    'Tooltipstring','Number of records');
left = left+74+colsep;
maxleft = max(maxleft,left);

h.next = uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth/2 ud.buttonheight], ...
    'String','>', ...
    'FontSize',ud.basefontsize,...
    'Tag','next',...
    'Tooltipstring','Go to next record');
left=left+ud.buttonwidth/2+colsep;
maxleft=max(maxleft,left);

h.last = uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth/2 ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','>|', ...
    'Tag','last',...
    'Tooltipstring','Go to last record');
left=left+ud.buttonwidth/2+colsep;
maxleft=max(maxleft,left);

h.delete = ...
    uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth/2 ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','-', ...
    'Tag','delete',...
    'Tooltipstring','Delete one record or selection');
left=left+ud.buttonwidth/2+colsep;
maxleft=max(maxleft,left);

h.new = ...
    uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth/2 ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','+', ...
    'Tag','new',...
    'Tooltipstring','Create new empty record');
left=left+ud.buttonwidth/2+colsep;
maxleft=max(maxleft,left);

h.duplicate = ...
    uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth/2 ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','x2', ...
    'Tag','duplicate',...
    'Tooltipstring','Copy record');
left=left+ud.buttonwidth/2+colsep;
maxleft=max(maxleft,left);

h.help = ...
    uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth/2 ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','?', ...
    'Tag','help',...
    'Tooltipstring','Help');
left=left+ud.buttonwidth/2+colsep;
maxleft=max(maxleft,left);

% goto next line
top=top-ud.buttonheight-colsep;
left=leftmargin;

critwidth=378;
h.crit = ...
    uicontrol('Parent',h.fig, ...
    'Style','edit',...
    'HorizontalAlignment','left',...
    'Units','pixels', ...
    'BackgroundColor',[1 1 1],...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top critwidth ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','', ...
    'Tag','crit',...
    'Tooltipstring','Filter criterium. Use comma as logical and, pipe for logical or');
left=left+critwidth+colsep;
maxleft=max(maxleft,left);

h.filter = ...
    uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'Style','checkbox',...
    'BackgroundColor',color,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top 20 ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','', ...
    'Tag','filter',...
    'Tooltipstring','Toggle filter on and off');
left=left+20+colsep;
maxleft=max(maxleft,left);

% next line
top=top-ud.buttonheight-colsep;
left=leftmargin;

h.load = ...
    uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','Load', ...
    'Tag','load',...
    'Tooltipstring','Replace current database by loading another');
left=left+ud.buttonwidth+colsep;
maxleft=max(maxleft,left);

h.import = ...
    uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','Import', ...
    'Tag','import',...
    'Tooltipstring','Import database into current database after current record.');
left=left+ud.buttonwidth+colsep;
maxleft=max(maxleft,left);

h.save = ...
    uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','Save', ...
    'Tag','save',...
    'Tooltipstring','Saving database in place');
left=left+ud.buttonwidth+colsep;
maxleft=max(maxleft,left);

h.save_as = ...
    uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','Export', ...
    'Tag','save as',...
    'Tooltipstring','Exporting database or selection as matlab or csv file.');
left=left+ud.buttonwidth+colsep;
maxleft=max(maxleft,left);

h.sort = ...
    uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','Sort', ...
    'Tag','sort',...
    'Tooltipstring','Sort by top field');
left=left+ud.buttonwidth+colsep;
maxleft=max(maxleft,left);

h.close = ...
    uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','Close', ...
    'Tag','close',...
    'Tooltipstring','Close database.');
left = left+ud.buttonwidth+colsep;
maxleft = max(maxleft,left);

h.table = ...
    uicontrol('Parent',h.fig, ...
    'Units','pixels', ...
    'BackgroundColor',ud.backgroundcolor,...
    'Callback','genercallback', ...
    'ListboxTop',0, ...
    'Position',[left top ud.buttonwidth ud.buttonheight], ...
    'FontSize',ud.basefontsize,...
    'String','Table', ...
    'Tag','table',...
    'Tooltipstring','Show as table.');
left = left+ud.buttonwidth+colsep;
maxleft = max(maxleft,left);

ud.persistent = 1;
ud.h = h;
ud.ind = (1:length(ud.db));
set(h.fig,'UserData',ud);

set(h.fig,'CloseRequestFcn','ud=get(gcf,''UserData'');control_db_callback(ud.h.close)');

% make figure wide enough
pos = get(h.fig,'Position');
pos(3) = maxleft;
set(h.fig,'Position',pos);

% set current record
control_db_callback( h.current_record );

drawnow
pause(0.6); % allow time for record window to be created, before moving

% set current record
control_db_callback( h.current_record );

if nargout==1
    fig = h.fig;
end


