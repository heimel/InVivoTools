function simplevisassesstool(figNum, soefig)

%
%  SIMPLEVISASSESS
%
%  Brings up a window for automatically, manually, or semi-automatically
%  assessing simple visual characterstics of cells.


if nargin==0,   fig=figure;set(fig,'MenuBar','none');
                drawsvatool(fig);
                simplevisassesstool('update',fig);
elseif ~ischar(figNum),  % is the call described above
        fig = figNum; figure(fig); clf; set(fig,'MenuBar','none');
        if nargin==1, Soefig = ''; else, Soefig = soefig; end;
        drawsvatool(fig);
        simplevisassesstool('update',fig);
else, % it is a callback
        command = figNum;
        theFig = gcbf;
        if isempty(theFig)&nargin~=2, theFig = gcf;
        elseif nargin==2,theFig = soefig; end;
        svastruct = get(theFig,'UserData');
        switch command,
		case 'update',
			simplevisassesstool('updatelist',theFig);
		case 'updatelist',
		  if svastruct.state==0,
		    z = geteditor('RunExperiment');
		    if ~isempty(z),
			ud=get(z,'userdata');
			try, aq=get(ud.list_aq,'userdata');
			catch, aq={}; end; strs={}; namerefs={};
			for i=1:length(aq),
			   strs=cat(2,strs,...
				{[aq(i).name ' | ' int2str(aq(i).ref)]});
			   namerefs=cat(2,namerefs,{struct('name',aq(i).name,...
				'ref',aq(i).ref)});
			end; 
			set(svastruct.acqlb,'userdata',aq,'String',strs);
			switch get(svastruct.chanuse,'value'),
                           case 1, set(svastruct.celllb,'String',{},'Value',[]);
			   case 2, set(svastruct.celllb,'Value',[],'String',...
				getcells(ud.cksds));
			   case 3, C = {};
			      for i=1:length(namerefs),
				C=cat(2,C,getcells(ud.cksds,namerefs{i}));
			      end;
			      set(svastruct.celllb,'Value',[],'String',C);
			end;
		    end;
                  end;
		  simplevisassesstool('enabledisable',theFig);
		case 'enabledisable',
                   if svastruct.state==0,
                        strtst=get(svastruct.testlb,'String');
			switch get(svastruct.chanuse,'value'),
			case 1,
			   set(svastruct.acqlb,'enable','on');
			   set(svastruct.celllb,'enable','off','value',[]);
			   stracq=lb_getselected(svastruct.acqlb);
			   if ~isempty(stracq)&~isempty(strtst),
			     set(svastruct.start,'enable','on');
			   else,
			     set(svastruct.start,'enable','off');
			   end;
			case 2,
			   set(svastruct.acqlb,'enable','off','value',[]);
			   set(svastruct.celllb,'enable','on');
                           strcll=lb_getselected(svastruct.celllb);
			   if ~isempty(strcll)&~isempty(strtst),
			     set(svastruct.start,'enable','on');
			   else,
			     set(svastruct.start,'enable','off');
			   end;
			case 3,
			   set(svastruct.acqlb,'enable','on');
			   set(svastruct.celllb,'enable','on');
                           strcll=lb_getselected(svastruct.celllb);
			   stracq=lb_getselected(svastruct.acqlb);
			   if (~isempty(strcll)|~isempty(stracq))&~isempty(strtst),
			      set(svastruct.start,'enable','on');
			   else,
			      set(svastruct.start,'enable','off');
			   end;
			end;
			 set(svastruct.testdelete,'enable','on');
			 set(svastruct.resume,'enable','off');
			 set(svastruct.restart,'enable','off');
		   else, set(svastruct.acqlb,'enable','off');
			 set(svastruct.celllb,'enable','off');
			 v=get(svastruct.testlb,'value');
			 if v==1,set(svastruct.testdelete,'enable','off');
			 else, set(svastruct.testdelete,'enable','on'); end;
			 set(svastruct.start,'enable','off');
			 set(svastruct.resume,'enable','on');
			 set(svastruct.restart,'enable','on');
		   end;
                % test stuff
                case 'testadd',
			strs=get(svastruct.testlb,'String');
			if isempty(strs), strs = {}; end;
			str = trialstr; 
                        [s,v]=listdlg('PromptString','Select a test to add:',...
				'SelectionMode','single','ListString',str);
			if v~=0,
				strs=cat(1,strs,{str{s}});
				set(svastruct.testlb,'String',strs);
			end;
			simplevisassesstool('enabledisable',theFig);
		case 'testdelete',
			v=get(svastruct.testlb,'value');
			if v==1&svastruct.state~=0, % do nothing
			else,
			   strs = get(svastruct.testlb,'String');
			   strs = cat(1,{strs{1:v-1}},{strs{v+1:end}});
			   set(svastruct.testlb,'String',strs,'Value',1);
			   simplevisassesstool('enabledisable',theFig);
			end;
		case 'start',
                        [r,d,sr] = getscreentoolparams;
			if isempty(r), errordlg('Could not find currentrect from screentool.');
			else, %r,d,
			    dotrials(svastruct,r,d,sr);
                        end;
	end;
end;

function t= trialstr
t= {'Orientation Prefs','Spatial Frequency Prefs',...
   'Contrast Prefs','Temporal Frequency Prefs'}; 

function j = whichstr(strs,str)
j = [];
for i=1:length(strs),if strcmp(strs{i},str),j=i;return; end; end;

function dotrials(svastruct, r, d, sr)
cmds = get(svastruct.testlb,'String');
if ~isempty(cmds),
   z = geteditor('RunExperiment');
   if isempty(z),errordlg('No RunExperiment panel.');error('No Runexperiment.');
   end;
   ud=get(z,'userdata'); cksds = ud.cksds;
   % get former spike data
   sd = {}; sdi=1;
   w = get(svastruct.chanuse,'value'),
   if w==1|w==3, % use new data
       st=get(svastruct.acqlb,'value');
       ac = get(svastruct.acqlb,'userdata');
       for i=1:length(st),
          nam=getcells(cksds,ac(st)),
          if ~isempty(nam),
               disp('loading the data');
               g=load(getexperimentfile(cksds),nam{1},'-mat'),
               sd{sdi}=getfield(g,nam{1});sdi=sdi+1;
          end;
       end;
   end;
   if w==2|w==3,
      st=get(svastruct.celllb,'value');strs=get(svastruct.celllb,'String');
      for i=1:length(st),
         g=load(getexperimentfile(cksds),strs{st},'-mat');
               sd{sdi}=getfield(g,strs{st});sdi=sdi+1;
      end;
   end;
   sd,

   % make stimscript
   switch whichstr(trialstr,cmds{1}),
   case 1, % orientation
      ps=make_orientation_prefs(sd,r,d,sr);
   case 2, % spatial
      ps=make_spatial_prefs(sd,r,d,sr);
   case 3, % contrast
      ps=make_contrast_prefs(sd,r,d,sr);
   case 4, % temporal
      ps=make_temporal_prefs(sd,r,d,sr);
   end;

   cmds = {cmds{2:end}}; set(svastruct.testlb,'String',cmds);

   auto = get(svastruct.hownext,'value');
   if auto==2, ps = periodicscript('graphical',ps); end;

   if ~isempty(ps), getparameters(ps), end;

   % show it and wait for return
   svastim = ps;
   save 

   % set state to running
end;

function ps = make_orientation_prefs(spikedata, r,d,sr)
 % in future, update for more than one cell
 % check to see if previous data, just make new one for now
 params = sinewave(spikedata,r,d,sr);
 params.angle = [ 0:30:360-30 ];
 ps = periodicscript(params);

function ps = make_spatial_prefs(spikedata,r,d,sr)
 % in future, update for more than one cell
 params = sinewave(spikedata,r,d,sr);
 params.sFrequency = [ 0.25 0.5 1 2 4 8 16 32];
 ps = periodicscript(params);

function ps = make_contrast_prefs(spikedata,r,d,sr)
 % in future, update for more than one cell
 params = sinewave(spikedata,r,d,sr);
 params.contrast = [ 1 0.64 0.32 0.16 0.08 0.04 0.02 0.01];
 ps = periodicscript(params);

function ps = make_temporal_prefs(spikedata,r,d,sr)
 % in future, update for more than one cell
 params = sinewave(spikedata,r,d,sr);
 params.tFrequency = [ 0.25 0.5 1 2 4 8 16 ];
 ps = periodicscript(params);

function params = sinewave(spikedata,r,d,sr)
  params.rect=recenterrect(r,[100 100 550 400],sr); params.imageType=2; params.animType=4; 
  params.barWidth=0.5000; params.nCycles=2; params.sPhaseShift=0; 
  params.background=0.5000; params.backdrop=0.5000; params.barColor=1;
  params.nSmoothPixels=2; params.fixedDur=0; params.windowShape=0;
  params.flickerType=0;  params.dispprefs={'BGpretime',2}; % params.distance=d;
  params.contrast = 1; % we don't want to co-vary this parameter
  sf = getparamvalues(spikedata,'sFrequency');
  tf = getparamvalues(spikedata,'tFrequency');
  an = getparamvalues(spikedata,'angle');
  if isempty(sf), params.sFrequency=1; else, params.sFrequency = sf; end;
  if isempty(tf), params.tFrequency=1; else, params.tFrequency = tf; end;
  if isempty(an), params.angle=1; else, params.angle = an; end;
  disp('Ignoring vieweing distance from screentool and using NewStimViewingDistance.');
  
function pvals = getparamvalues(spikedata,param)
pvals = [];
   disp('running getparamvalues');
   spikedata,
for j=1:length(spikedata),
   disp('finding associates');
   [a,i]=findassociate(spikedata{j},['svatuning ' param],'simplevisassess',[]);
   if ~isempty(i), % take only most recent
      a.data,
      pvals = [pvals a(end).data.maxes(1) ], % for now, allow only one value
   else, pvals = [];
   end;
end;




function drawsvatool(h0)
set(h0,'Color',[0.8 0.8 0.8], ...
        'PaperPosition',[18 180 576 432], ...
        'PaperUnits','points', ...
        'Position',[501 119 712 830], ...
        'Tag','svatool', ...
        'ToolBar','none');
h1 = uicontrol('Parent',h0, ...
        'BackgroundColor',[0 0 0], ...
        'ListboxTop',0, ...
        'Position',[30 630 632 2], ...
        'Style','frame', ...
        'Tag','Frame1');
h1 = uicontrol('Parent',h0, ...
        'BackgroundColor',[0 0 0], ...
        'ListboxTop',0, ...
        'Position',[30 335 632 2], ...
        'Style','frame', ...
        'Tag','Frame1');
h1 = uicontrol('Parent',h0, ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',12, ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[14 797 204 17], ...
        'String','Simple Visual Assessment', ...
        'Style','text', ...
        'Tag','StaticText1');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[10   770   104    16], ...
        'String','Data to use:', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[10   745   124    16], ...
	'FontSize',9, ...
        'String','Acquisition chans:', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[161   745   124    16], ...
	'FontSize',9, ...
        'String','Cells:', ...
        'Style','text', ...
	'HorizontalAlignment','left',...
        'Tag','StaticText2');
chanuse = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Min',1, ...
        'Position',[110   768   129    25], ...  %        'String',{'New','Previous','Both'}, ...
        'String',{'New'}, ...
        'Style','popupmenu', ...
        'Tag','PopupMenu1', ...
        'Value',1);
celllb = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
        'Position',[161 671 161 70], ...
        'String',' ', ...
        'Style','listbox', ...
        'Tag','Listbox1', ...
        'Max',2,'Value',[],'Callback','simplevisassesstool enabledisable');
acqlb = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
        'Position',[10 671 141 70], ...
        'String',' ', ...
        'Style','listbox', ...
        'Tag','Listbox1', ...
        'Max',2,'Value',[],'Callback','simplevisassesstool enabledisable');
acqupd = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'ListboxTop',0, ...
        'Position',[59   647   118    19], ...
        'String','Update list', ...
        'Tag','Pushbutton1','Callback','simplevisassesstool updatelist');
start = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'FontSize',12, ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[605 770 78 25], ...
        'String','Start', ...
        'Tag','Pushbutton2','Callback','simplevisassesstool start');
resume = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'ListboxTop',0, ...
        'Position',[605   734    78    25], ...
        'String','Resume', ...
        'Tag','Pushbutton2');
restart = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'ListboxTop',0, ...
        'Position',[605   699    78    25], ...
        'String','Restart', ...
        'Tag','Pushbutton2');
help = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'ListboxTop',0, ...
        'Position',[605   664    78    25], ...
        'String','Help', ...
        'Tag','Pushbutton2');
testlb = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
        'Position',[403   680   171   120], ...
        'String',{}, ...
        'Style','listbox', ...
        'Tag','Listbox2', ...
        'Value',1);
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[423   805   123    19], ...
        'String','Tests to run:', ...
        'Style','text', ...
        'Tag','StaticText3','Callback','simplevisassesstool enabledisable');
testadd = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'ListboxTop',0, ...
        'Position',[346   756    49    24], ...
        'String','Add', ...
        'Tag','Pushbutton3','Callback','simplevisassesstool testadd');
testdelete = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'ListboxTop',0, ...
        'Position',[346   705    49    24], ...
        'String','Delete', ...
        'Tag','Pushbutton3','Callback','simplevisassesstool testdelete');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[325   650   123    19], ...
        'String','Create next stim...', ...
        'Style','text', ...
        'Tag','StaticText3');
hownext = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Min',1, ...
        'Position',[450   650   129    25], ...
        'String',{'Automatically','Manually','Semi-automatically'}, ...
        'Style','popupmenu', ...
        'Tag','PopupMenu1', ...
        'Value',1);
cellpop = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Min',1, ...
        'Position',[558   599   109    25], ...
        'String',' ', ...
        'Style','popupmenu', ...
        'Tag','PopupMenu1', ...
        'Value',1);
testpop = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Min',1, ...
        'Position',[ 569    71   108    25], ...
        'String',' ', ...
        'Style','popupmenu', ...
        'Tag','PopupMenu2', ...
        'Value',1);
runnext = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'ListboxTop',0, ...
        'Position',[452.0000   69.0000  100.0000   27.0000], ...
        'String','Run next stim:', ...
        'Tag','Pushbutton4');
newstim = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'ListboxTop',0, ...
        'Position',[456    31   220    25 ], ...
        'String','New stim using these values:', ...
        'Tag','Pushbutton5');
stimtypespop = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Min',1, ...
        'Position',[568   303   109    25], ...
        'String',' ', ...
        'Style','popupmenu', ...
        'Tag','PopupMenu1', ...
        'Value',1);
set(h0,'userdata',struct('acqlb',acqlb,'acqupd',acqupd,'start',start,...
        'resume',resume,'help',help,'testlb',testlb,'testadd',testadd,...
        'testdelete',testdelete,'cellpop',cellpop,'testpop',testpop,...
        'runnext',runnext,'newstim',newstim,'stimtypespop',stimtypespop,...
	'restart',restart,'state',0,'tag','svatool','chanuse',chanuse,...
	'celllb',celllb,'anal',{{}},'hownext',hownext));

  % state - 0 => setting up, 1 => running the top test
