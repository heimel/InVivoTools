function screentool(figNum,soefig)

% 
%  SCREENTOOL
%  
%  Brings up a window for visualizing rectangles and receptive field locations
%  on the remote machine.  Also allows one to re-locate stimuli and stimuli
%  within scripts to particular locations.
%
%  Commands:
%  Update Remote Window Size    :    Gets window dimensions from remote machine
%  Current Rect                 :    Current rectangle being worked with
%  Drag New Rect                :    If checked, then clicking and dragging in
%                               :        the virtual screen window will define
%                               :        a new current rect
%  Get Rect Remote              :    Get rectangle from receptive-field program
%                               :        on remote machine
%  Set Rect Remote              :    Set the current rectangle for
%                               :        receptive-field program
%  Plot Current Rect (toggle)   :    If on, rect is plotted in blue on virtual
%                               :        screen
%  Rect List                    :    A list of currently saved rectangles
%     Add                       :    Add the current rectangle to the list
%     Delete                    :    Delete the selected rectangle
%     Save As                   :    Save the rectangles to a file
%     Make current              :    Make the selected rectangle current
%     Update                    :    Update the list of rectangles if a change
%                               :        is made on the command line
%     Load                      :    Load a file into matlab
%     Change autosave           :    Change the location of the autosave file
%     Export                    :    Exports the rect structure to a workspace
%                               :        variable
%     Import                    :    Imports a rect structure from a workspace
%                               :        variable
%  Operate on                   :    Determines whether or not the following
%                               :        operations are performed on local or
%                               :        remote scripts
%  Plot Stimuli/Scripts ...     :    Allows the user to select scripts and
%                               :        stimuli, and the locations of these
%                               :        are plotted on the window in red.
%                               :        Note that the value here is taken from
%                               :        the parameters, not the display
%                               :        data structures.
%  Edit Stimuli/Scripts to be   :
%   Re-centered at Current Rect :    Allows the user to select scripts and
%                               :        stimuli, and these are moved so they
%                               :        are centered on Current Rect.  If this
%                               :        would cause the rectangle to go off the
%                               :        screen, then the stimuli/scripts are
%                               :        moved as close as possible to the
%                               :        location while preserving the
%                               :        original dimensions.
%   Displayed at Current Rect   :    Allows the user to select scripts and
%                               :        stimuli, and these are moved so they
%                               :        are displayed at Current Rect.  Some
%                               :        stimuli have parameters that constrain
%                               :        their dimensions (such as blinkingstim,
%                               :        stochasticgridstim), and these are
%                               :        moved so they will be as close as
%                               :        possible to the Current Rect w/out 
%                               :        changing parameters.
%    Edit Params & Reload       :    Modifies the behavior of the above two
%                               :        commands.  Either the stimuli/scripts
%                               :        are replaced with new ones with the
%                               :        appropriate rectangle parameters, or
%                               :        the image data is directly modified
%                               :        to reflect the appropriate changes.
%                               :        Editing the parameters is recommended
%                               :        since not all stimuli react to direct
%                               :        editing in the same way, but the 
%                               :        direct method may be used when one
%                               :        doesn't want to wait for a loaded
%                               :        stimulus to be reloaded (when a 
%                               :        stimulus is replaced, it must be loaded
%                               :        again).
%           
%
%  One can assign ScreenTool to appear in a particular figure by calling
%  SCREENTOOL(FIGNUM).
%
%  One can pre-assign the autosave directory by calling
%  SCREENTOOL(FIGNUM, DIRECTORY).
%
%  The 'UserData' field for this window contains a field called 'Tag'
%  equal to "ScreenTool" for easy finding with GETEDITOR.
%
%  See also:  RUNEXPERIMENT, GETEDITOR

initscreensize=[640 480];

if nargin==0,   fig=figure;set(fig,'MenuBar','none');
                drawscreentool(fig,'',initscreensize);
		screentool('updateaxes',fig);
		screentool('updaterectstruct',fig);
elseif ~ischar(figNum),  % is the call described above
        fig = figNum; figure(fig); clf; set(fig,'MenuBar','none');
	if nargin==1, Soefig = ''; else, Soefig = soefig; end;
        drawscreentool(fig,Soefig,initscreensize);
	screentool('updateaxes',fig); screentool('updaterectstruct',fig);
else, % it is a callback
        command = figNum;
        theFig = gcbf;
        if isempty(theFig)&nargin~=2,
			zz=geteditor('screentool');
			if ~isempty(zz), theFig = zz; else, theFig = gcf; end;
        elseif nargin==2,theFig = soefig; end;
        screentoolstruct= get(theFig,'UserData');
        lb = screentoolstruct.lb;
	ax = screentoolstruct.ax;
	rectstruct = get(lb,'UserData');
	sr=[0 0 screentoolstruct.screensize(1) screentoolstruct.screensize(2)];
        switch command,
        case 'updateaxes',
			% update axes
			sz = screentoolstruct.screensize; % for brevity
			buf = fix(max(sz)*0.10);
			a = [-buf sz(1)+buf -buf sz(2)+buf ];
			axes(ax);
			h = findobj(ax,'Type','Rectangle');
			if ~isempty(h),
				for i=1:length(h),delete(h(i));end;
			end;
			rectangle('Position',[0, 0, sz(1), sz(2)],...
			  'ButtonDownFcn','screentool axesbuttondown');
			set(ax,'ydir','reverse');
			axis(a);
			set(ax,'xtick',[0 fix(sz(1)/2) sz(1)]);
			set(ax,'ytick',[0 fix(sz(2)/2) sz(2)]);
			set(screentoolstruct.screeninfo,'String',...
			   ['Screen is ' int2str(sz(1)) ' x ' int2str(sz(2))]);
			screentool('plotcurr',theFig);
		case 'plotcurr',
			%disp('plotting'),
			h = findobj(ax,'Tag','curr');
			if ~isempty(h),
				for i=1:length(h),delete(h(i));end;
			end;
			if get(screentoolstruct.plotcurrrect,'Value'),
			   rect = trytogetrect(screentoolstruct);
			   if ~isempty(rect),
				oldax = gca; axes(ax); hold on;
				h=fill(rect([1 3 3 1]),rect([2 2 4 4]),[1 0 0]);
				set(h,'Tag','curr',...
				  'ButtonDownFcn','screentool axesbuttondown');
				hold off; axes(oldax);
			   end;
			end;
		case 'updatewindowsize',
			str={'StimWindowGlobals;'
			   'save(''fromremote'',''StimWindowRect'',''-mat'');'
			   'save(''gotit'',''StimWindowRect'',''-mat'');'};
			p = getrempath;
			if isempty(p),
				errordlg('Could not find RunExperiment window');
			else,  % go for it
				b = sendremotecommand(p,str);
				if b, % it's good and user didn't cancel
					g=load([p 'gotit'],'-mat');
					screentoolstruct.screensize = ...
						g.StimWindowRect([3 4]);
					set(theFig,'userdata',screentoolstruct);
					screentool('updateaxes',theFig);
				end;
			end;
		case 'GetRectRemote',
			strs={'ReceptiveFieldGlobals;'
			   'save(''fromremote'',''RFcurrentrect'',''-mat'');'
			   'save(''gotit'',''RFcurrentrect'',''-mat'');'};
			p = getrempath;
			if isempty(p),
				errordlg('Could not find RunExperiment window');
			else,
				b = sendremotecommand(p,strs);
				if b,
					g = load([p 'gotit'],'-mat');
					st = mat2str([g.RFcurrentrect]);
					set(screentoolstruct.currrect,...
						'String',st);
					screentool('plotcurr',theFig);
				end;
			end;
		case 'SetRectRemote',
			r = trytogetrect(screentoolstruct);
			if ~isempty(r),
				str={'ReceptiveFieldGlobals;'
				 ['RFcurrentrect=' mat2str(r) ';'] 
				 'cd(pwd);save(''gotit'',''RFcurrentrect'',''-mat'');'};
				p = getrempath;
				if isempty(p),
					errordlg(['Could not find ' ...
					'RunExperiment window.']);
				else, b=sendremotecommand(p,str); end; %no input
			else, errordlg('Current rect not valid.'); end;
		case 'clearplotsonwindow',
			h = findobj(ax,'Tag','stim');
			for i=1:length(h),delete(h(i));end;
		case 'axesbuttondown',
			if get(screentoolstruct.drag,'Value'),
				xy1 = get(ax,'CurrentPoint');
				xy1 = round(xy1([1 3]));
				rct = rbbox;
				xy2 = get(ax,'CurrentPoint');
				xy2 = round(xy2([1 3]));
				%xy1,xy2,
				scr = [0 0 screentoolstruct.screensize([1 2]) ];
				cr=rectofinter(scr,[xy1([1 2]) xy2([1 2])]);
				if ~isempty(cr),
				  if diff(cr([1 3]))*diff(cr([2 4]))~=0,
					set(screentoolstruct.currrect,...
					'String',mat2str(cr));
				  end;
				end;
				screentool plotcurr;
			end;
		case 'plotonwindow',
			vars = getscripts(screentoolstruct);
			if strcmp(class(vars),'cell'),
 			   [s,v] = listdlg('PromptString',...
				'Select the stimuli and scripts',...
				'ListString',vars,'SelectionMode','multiple');
			  if ~isempty(s)&~isempty(vars),
				if get(screentoolstruct.operateon,'Value')==1,
					vars = vars(s);
					foreachstimdo(vars,...
					   'screentoolplotrects',{'ax',ax});
				else, % handle remote
					p = getrempath;
					% we know above just succeeded
					vars = vars(s);
					save([p 'toremote'],'vars','-v6');
					% indent adjusted for clarity
		strs={'global tempglob'
		  'tempglob = {};'
		  'load toremote -mat;'
		  'args={''paramname'',''rect'',''globvar'',''tempglob''};'
		  'b=foreachstimdo(vars,''putstimrectglobal'',args);'
		  'save(''fromremote'',''tempglob'',''-mat'');'
		  'save(''gotit'',''tempglob'',''-mat'');'
		  'clear tempglob vars;'};
					% end indent adjust
					b=sendremotecommand(p,strs);
					if b,
						crax=gca;
						axes(ax);
						hold on;
						g=load([p 'gotit'],'-mat');
						for i=1:length(g.tempglob),
							r=g.tempglob{i};
							h=fill(r([1 3 3 1]),...
							  r([2 2 4 4]),[0 0 1]);
							set(h,'Tag','stim',...
							'ButtonDownFcn',...
							['screentool '...
							'axesbuttondown']);
						end;
						hold off;
						axes(crax);
					end;
				end;
			  end;
			end;
		case 'recenter',
			rect = trytogetrect(screentoolstruct);
			p = get(screentoolstruct.editparams,'Value');
			if isempty(rect),errordlg('Current rect not valid.');
			else,
				vars = getscripts(screentoolstruct);
				if strcmp(class(vars),'cell'),
				 [s,v] = listdlg('PromptString',...
				  'Select the stimuli and scripts',...
				  'ListString',vars,'SelectionMode','multiple');
				 if ~isempty(s)&~isempty(vars),
					if get(screentoolstruct.operateon,...
						'Value')==1,
						vars = vars(s);
						foreachstimdo(vars,...
						  'recenterstim',{'rect',...
							rect,'screenrect',...
							sr,'params',p});
					else, % remote
					   pr=getrempath; % it just succeeded
					   vars=vars(s);
					   save([pr 'toremote'],'vars',...
					       'rect','sr','p','-v6');
					   % indent adjusted for clarity
		strs={'load toremote -mat;'
		  'args={''rect'',rect,''screenrect'',sr,''params'',p};'
		  'b=foreachstimdo(vars,''recenterstim'',args);'
		  'save(''fromremote'',''b'',''-mat'');'
		  'save(''gotit'',''b'',''-mat'');'};
					   % end indent adjust
					   b=sendremotecommand(pr,strs);
					   if b, errordlg('Update successful');
					   end;
					end;
				 end;
				end;
			end;
		case 'displaycurrentrect',
			rect = trytogetrect(screentoolstruct);
			p = get(screentoolstruct.editparams,'Value');
			if isempty(rect),errordlg('Current rect not valid.');
			else,
				vars = getscripts(screentoolstruct);
				if strcmp(class(vars),'cell'),
				 [s,v] = listdlg('PromptString',...
				  'Select the stimuli and scripts',...
				  'ListString',vars,'SelectionMode','multiple');
				 if ~isempty(s)&~isempty(vars),
					if get(screentoolstruct.operateon,...
						'Value')==1,
						vars = vars(s);
						foreachstimdo(vars,...
						  'repositionstim',{'rect',...
							rect,'params',p});
					else, % remote
					   pr=getrempath; % it just succeeded
					   vars=vars(s);
					   save([pr 'toremote'],'vars',...
					       'rect','sr','p','-v6');
					   % indent adjusted for clarity
		strs={'load toremote -mat;'
		  'args={''rect'',rect,''params'',p};'
		  'b=foreachstimdo(vars,''repositionstim'',args);'
		  'save(''fromremote'',''b'',''-mat'');'
		  'save(''gotit'',''b'',''-mat'');'};
					   % end indent adjust
					   b=sendremotecommand(pr,strs);
					   if b, errordlg('Update successful');
					   end;
					end;
				 end;
				end;
			end;
		case 'Help',
			textbox('screentool help',help('screentool'));
		case 'RFstart',
			help ReceptiveFieldMapper % to show manual
			str = {'ReceptiveFieldGlobals;cd(pwd);'
			       'save(''gotit'',''RFcurrentrect'',''-mat'');'
                               'if ~isempty(RFparams),'
			       'if RFparams.state==0,'
			       'ReceptiveFieldMapper;'
                               'end;else,ReceptiveFieldMapper;end;'};
			pr = getrempath;
			if ~isempty(pr), b=sendremotecommand(pr,str); end;
		case 'RFstop',
			str = {'ReceptiveFieldGlobals; cd(pwd);'
			       'save(''gotit'',''RFcurrentrect'',''-mat'');'
				'cd(pwd);'
			        'if ~isempty(RFparams),RFparams.state=0;end;'};
			pr = getrempath;
			if ~isempty(pr), b=sendremotecommand(pr,str); end;
		case 'RFgetinfo',
			str={'ReceptiveFieldGlobals;'
			 'save(''fromremote'',''RFparams'',''-mat'');'
			 'save(''gotit'',''RFparams'',''-mat'');'};
			 p=getrempath;
                         if ~isempty(p),
				b=sendremotecommand(p,str);
				if b,
					g=load([p 'fromremote'],'-mat');
					g=g.RFparams;
					% update text info first
					set(screentoolstruct.RFmtextinfo,...
						'UserData',g);
					if ~isempty(g),
					   p=getparameters(g.stims{g.stim});
					     if g.stim==1, % field
					     %indent change for clarity
	  info={'Field'
		['rect: ' mat2str(p.rect)]
		['contrast: ' int2str(p.contrast)]};
					     % end indent change
					    set(screentoolstruct.RFmtextinfo,...
					      'String',info);
					    elseif g.stim==2, % bar
					    % indent change for clarity
	  info={'Bar'
		['rect: ' mat2str(p.rect) '; ']
			['orientation: ' num2str(p.orientation) '  contrast: ' num2str(p.foreground(1)/255)]};
					    % end of indent change
					    set(screentoolstruct.RFmtextinfo,...
					      'String',info);
					    end;
					else,
					    set(screentoolstruct.RFmtextinfo,...
						'String','No stimulus');
					end;
				end;
			else,
			   errordlg('Couldn''t find RunExperiment window.');
			end;
		case 'RFnewstim',
			g=get(screentoolstruct.RFmtextinfo,'UserData');
			if ~isempty(g), % just do nothing if isempty
				makeNewFig(gcbf);
			end;
		case 'RFNewOK',
			g=get(screentoolstruct.RFmtextinfo,'UserData');
			newstr = get(gcbf,'UserData');
			% check for syntax
			str = get(newstr.name,'String');
			ty = char(lb_getselected(newstr.lb));
			isstimer = 0;
			try,
				if isempty(g),errordlg(['Stimulus no longer '...
                                 'associated.']); close(newstr.thisfig);
				else,
				 evalin('base',[str '=' ty '(''default'');']);
				 p=evalin('base',['getparameters(' str ')']);
				 p2=getparameters(g.stims{g.stim});
				 if isfield(p,'rect'), p.rect=p2.rect; end;
				 if isfield(p,'angle')&isfield(p2,'orientation'),
					p.angle=p2.orientation;end;
				 if isfield(p,'orientation')&isfield(p2,'orientation'),
					p.orientation=p2.orientation; end;
				 if isfield(p,'contrast')&isfield(p2,'contrast'),
					p.contrast = p2.contrast; end;
				 try, 
				    eval(['val=' ty '(p);']);
				    assignin('base',str,val);
				 catch, isstimer=1; errordlg('Could not transfer fields because values are inconsistent with other default parameters.'); end;
				% indent for clarity
       evalin('base',[str '=' ty '(''graphical'',' str ');']);
				% end of indent
				 close(newstr.thisfig);
				 z=geteditor('ScriptEditor');
				 if z,ScriptEditor('Update',z); end;
				 z=geteditor('StimEditor');
				 if z,ScriptEditor('Update',z); end;
				 evalin('base',['if isempty(' str '),clear ' str ';end;']);
	                        end;
			catch, if ~isstimer, errordlg(['Syntax error in name.']); end;
			end;
		case 'updaterectstruct',
			% update display
			strs = {};
			for i=1:length(rectstruct),
				g = mat2str(rectstruct(i).rect);
				strs = cat(2,strs,{g});
			end;
			set(lb,'String',strs);
			% enable/disable
			set(screentoolstruct.importvar,'enable','on');
			set(screentoolstruct.changeautosave,'enable','on');
			set(screentoolstruct.load,'enable','on');
			set(screentoolstruct.add,'enable','on');
			if length(strs)>0,
				set(screentoolstruct.exportvar,'enable','on');
				set(screentoolstruct.saveas,'enable','on');
			else,
				set(screentoolstruct.exportvar,'enable','off');
				set(screentoolstruct.saveas,'enable','off');
			end;
			strs = lb_getselected(lb);
			if length(strs)>0,
				set(screentoolstruct.delete,'enable','on');
				set(screentoolstruct.edit,'enable','on');
				set(screentoolstruct.makecurr,'enable','on');
			else,
				set(screentoolstruct.delete,'enable','off');
				set(screentoolstruct.edit,'enable','off');
				set(screentoolstruct.makecurr,'enable','off');
			end;
		case 'add',
			r = trytogetrect(screentoolstruct);
			if ~isempty(r),
				% get input
				prompt={'Date','Cell','Location','Note'};
				[Y,M,D,H,MI,S] = datevec(now);
				d=sprintf('%.4i-%.2i-%.2i %.2i:%.2i:%.2i',...
					Y,M,D,H,MI,fix(S));
				def={d,'','',''};
				dlgTitle='New Rectangle item';
				lineNo=1;
				answer=inputdlg(prompt,dlgTitle,lineNo,def);
				if ~isempty(answer),
					rs=struct('date',answer{1},'cell',...
					  answer{2},'location',answer{3},...
					  'note',answer{4},'rect',r);
					rectstruct=[rectstruct rs];
					set(lb,'userdata', rectstruct);
					screentool updaterectstruct
				end;
			else, errordlg('Current rect not valid'); 
			end;
		case 'delete',
			v = get(lb,'Value'); l = length(rectstruct);
			rectstruct = rectstruct([1:(v-1) (v+1):l]);
			set(lb,'userdata',rectstruct);
			screentool updaterectstruct
		case 'makecurr',
			r = rectstruct(get(lb,'Value')).rect;
			set(screentoolstruct.currrect,'String',mat2str(r));
			screentool plotcurr
		case 'saveas',
			[f,p]=uiputfile('*.mat','File to save to...');
			if f~=0,
				eval(['save ' p f ' rectstruct']);
			end;
		case 'edit',
			l = get(lb,'Value');
			r = rectstruct(l);
			prompt={'Date','Cell','Location','Note','Rect'};
			def={r.date,r.cell,r.location,r.note,mat2str(r.rect)};
			lineNo = 1; dlgTitle = 'Edit Rectangle item';
			badans = 1;
			while (badans),
			answer = inputdlg(prompt,dlgTitle,lineNo,def);
				if ~isempty(answer),
					try,
						eval(['rect=' answer{5} ';']);
					catch,
						rect = [];
					end;
					r = struct('date',answer{1},'cell',...
						answer{2},...
						'location',answer{3},'note',...
						answer{4},'rect',rect);
					if isvalidrectstruct(r,'',0),
						badans = 0;
						rectstruct(l) = r;
						set(lb,'userdata',rectstruct);
					       screentool('updaterectstruct',...
							theFig);
					else, def = answer;
					end;
				else, badans = 0;
				end;
			end;
		case 'load',
			[f,p]=uigetfile('*.mat','File to load...');
			if f~=0,
				try,
					g = load([p f]);
					g = g.rectstruct;
					if isvalidrectstruct(g,'rectstruct',1),
						set(lb,'userdata',g);
						screentool(...
						  'updaterectstruct',theFig);
					end;
				catch,
					errordlg(['Could not find matlab ' ...
					   'variable ''rectstruct'' in ' ...
						'file or it was not valid.']);
				end;
			end;
		case 'changeautosave',
			e= exist(screentoolstruct.autosavedir);
			if isempty(e)|(e~=2), initfile='';
			else, initfile = screentoolstruct.autosavedir; end;
			[f,p] = uiputfile(initfile,'Autosave file');
			if f~=0,
				screentoolstruct.autosavedir = [p f];
				set(theFig,'UserData',screentoolstruct);
			end;
		case 'export',
			z = uigetvarname('Variable name for export','');
			if ~isempty(z), assignin('base',z,rectstruct); end;
		case 'import',
			w = evalin('base','whos');
			w = {w.name};
			[s,v]=listdlg('PromptString',...
				'Select a variable to import',...
				'SelectionMode','single','ListString',w);
			if ~isempty(s)&~isempty(w),
				w = w{s};
				s = evalin('base',w);
				if isvalidrectstruct(s,w,1),
					set(lb,'userdata',s);
					screentool('updaterectstruct',theFig);
				end;
			end;
	end;
end;

function b = isvalidrectstruct(s,w,r)
b = 1;
fields={'date','cell','location','note','rect'};
sz={[-1 -1],[-1 -1],[-1 -1],[-1 -1],[1 4]};
[g,e]=hasAllFields(s(1),fields,sz);
if g==0,
	b = 0;
	if r, errordlg(['''' w ''' is not a valid rectstruct: ' e]); end;
end;

function vars = getscripts(screentoolstruct)
if get(screentoolstruct.operateon,'Value')==1,
	vars = cat(2,listofvars('stimscript'),listofvars('stimulus'));
else,   % remote
   p = getrempath;
   if isempty(p), errordlg('Could not find RunExperiment window'); vars=[];
   elseif exist(p)~=7, errordlg('Remote directory does not exist.'); vars=[];
   else,
     strs={'vars=cat(2,listofvars(''stimscript''),listofvars(''stimulus''));'
	   'save(''fromremote'',''vars'',''-mat'');'
	   'save(''gotit'',''vars'',''-mat'');'
	   'clear vars';};
	b=sendremotecommand(p,strs);
	if b,
		g=load([p 'gotit'],'-mat');
		vars = g.vars;
	else, vars = {};
	end;
   end; 
end;

function str = update_str
        str = { 'g=cat(2,listofvars(''stimscript''),listofvars(''stimulus'');'
        's=struct(''scripts'',g)'};

function path = getrempath
z=geteditor('RunExperiment');
if ~isempty(z),
	ud = get(z,'UserData');
	path = fixpath(get(ud.remotepath,'String'));
else, path = [];
end;

function rect = trytogetrect(screentoolstruct)
rectstr = get(screentoolstruct.currrect,'String');
try, eval(['rect = ' rectstr ';']);
catch, rect = [];
end;
if size(rect)~=[1 4], rect = []; end;


function drawscreentool(h0,autosavedir,screensize)
userectlist = 0;
set(h0,'Position',[689 476 533 438],'ToolBar','none');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',16, ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[16.0000  403.0000   110.0000   24.0000], ...
        'String','Screen Tool', ...
        'Style','text', ...
        'Tag','StaticText1');
colororder = [		0         0    1.0000;
			0    0.5000         0;
			1.0000         0         0;
			0    0.7500    0.7500;
			0.7500         0    0.7500;
			0.7500    0.7500         0;
			0.2500    0.2500    0.2500;];
ax = axes('Parent',h0, ...
        'Units','pixels', ...
        'CameraUpVector',[0 1 0], ...
        'Color',[1 1 1], ...
        'ColorOrder',colororder, ...
        'Position',[31 247 153 106], ...
        'Tag','Axes1', ...
        'XColor',[0 0 0], ...
        'YColor',[0 0 0], ...
        'ZColor',[0 0 0],'ButtonDownFcn','screentool axesbuttondown');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[201.9999  382.0000   98.0000   17.0000], ...
        'String','Current Rect:', ...
        'Style','text', ...
        'Tag','StaticText2');
currrect = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
        'ListboxTop',0, ...
        'Position',[ 201.9999  349.0000  140.0000   33.0000], ...
        'Style','edit', ...
        'Tag','EditText1',...
	'HorizontalAlignment','left',...
	'Callback','screentool plotcurr');
if userectlist,  % toggle for removing rect list, turned out to be not useful
lb = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
        'Position',[340 266 151 112], ...
        'String',[], ...
        'Style','listbox', ...
        'Tag','Listbox1', ...
        'Value',1,...
	'UserData',[]);
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'HorizontalAlignment','left', ...
        'Interruptible','off', ...
        'ListboxTop',0, ...
        'Position',[338 379 75 16], ...
        'String','Rect List:', ...
        'Style','text', ...
        'Tag','StaticText2');
addbt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[341 242 48 21], ...
        'String','Add', ...
        'Tag','Pushbutton1',...
	'Callback','screentool add');
deletebt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[393 242 43 21], ...
        'String','Delete', ...
        'Tag','Pushbutton1',...
	'Callback','screentool delete');
saveasbt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[443 242 48 21], ...
        'String','Save As', ...
        'Tag','Pushbutton1',...
	'Callback','screentool saveas');
makecurr = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[341 217 87 21], ...
        'String','Make Current', ...
        'Tag','Pushbutton1',...
	'Callback','screentool makecurr');
loadbt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[341 193 47 21], ...
        'String','Load', ...
        'Tag','Pushbutton1',...
	'Callback','screentool load');
changeautosave = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[393 193 97 21], ...
        'String','Change autosave', ...
        'Tag','Pushbutton1',...
	'Callback','screentool changeautosave');
exportvar = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[341 169 70 21], ...
        'String','Export...', ...
        'Tag','Pushbutton1',...
	'Callback','screentool export');
importvar = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[420 169 70 21], ...
        'String','Import...', ...
        'Tag','Pushbutton1',...
	'Callback','screentool import');
else,importvar=[];exportvar=[];changeautosave=[];loadbt=[];makecurr=[];
	saveasbt=[];deletebt=[];addbt=[];lb=[];
end;
dragbt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[205.0459  318.5203  132.2134   21.8621], ...
        'String','Drag New Rect', ...
        'Tag','Pushbutton1',...
	'Style','checkbox');
getrectrembt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[205.0459  293.5351  132.2134   21.8621], ...
        'String','Get Rect Remote', ...
        'Tag','Pushbutton1',...
	'Callback','screentool GetRectRemote');
setrectrembt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[205.0459  268.5499  132.2134   21.8621], ...
        'String','Set Rect Remote', ...
        'Tag','Pushbutton1',...
	'Callback','screentool SetRectRemote');
updateremwindbt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[28.0673  382.0244  155.1165   21.8621], ...
        'String','Update Remote Window Size', ...
        'Tag','Pushbutton1',...
	'Callback', 'screentool updatewindowsize');
helpbt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[445.5285  410.1328   79.1198   21.8621], ...
        'String','Help', ...
        'Tag','Pushbutton1',...
	'Callback','screentool Help');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[13.4926  171.7322   63.5041   19.7800], ...
        'String','Operate on:', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',12, ...
        'FontWeight','bold', ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[13.4926  193.5943  155.1165   23.9442], ...
        'String','Plot/Edit Stimuli/Scripts:', ...
        'Style','text', ...
        'Tag','StaticText1');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',12, ...
        'FontWeight','bold', ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[282.0836  136.3365  145.7470   21.8621], ...
        'String','ReceptiveFieldMapper:', ...
        'Style','text', ...
        'Tag','StaticText1');
rfmti = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',10, ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[282.0836   63.4630  145.7470   41.6420], ...
        'String',{'Stimulus info:','No stimulus.'},...
        'Style','text', ...
        'Tag','StaticText1');
rfmgit = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[282.0836  115.5155  104.1050   21.8621], ...
        'String','Get stimulus info', ...
        'Tag','Pushbutton1',...
	'Callback','screentool RFgetinfo');
rfmmst = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[282.0836   32.2315  187.3890   21.8621], ...
        'String','New stim/script based on...', ...
        'Tag','Pushbutton1','Callback','screentool RFnewstim');
rfmbbt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[427.8306  141.5418   36.4368   21.8621], ...
        'String','Start', ...
        'Tag','Pushbutton1','Callback','screentool RFstart');
rfmebt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[469.4726  141.5418   36.4368   21.8621], ...
        'String','Stop', ...
        'Tag','Pushbutton1','Callback','screentool RFstop');
operateon = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Min',1, ...
        'Position',[79.0788  175.8964  131.1723   17.6979], ...
        'String',{'Local Stimuli/Scripts','Remote Stimuli/Scripts'}, ...
        'Style','popupmenu', ...
        'Tag','PopupMenu1', ...
        'Value',1);
plotonwindow = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[20.7800  144.6649  188.4301   21.8621], ...
        'String','Plot Stimuli/Scripts on Window', ...
        'Tag','Pushbutton1',...
	'Callback','screentool plotonwindow');
plotsonwindowclear = uicontrol('Parent',h0, ...
	'Units','pixels',...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'FontWeight','bold', ...
	'ListboxTop',0, ...
	'Position',[219.6206  144.6649   52.0525   21.8621],...
	'String','Clear',...
	'Tag','Pushbutton1',...
	'Callback','screentool clearplotsonwindow');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[ 16.6158  116.5566  121.8029   16.6568], ...
        'String','Edit Stimuli/Scripts to be ...', ...
        'Style','text', ...
        'Tag','StaticText2');
recenterbt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[43.6831   99.8998  188.4301   21.8621], ...
        'String','Re-centered at Current Rect', ...
        'Tag','RecenteredAtCurrentRectBt',...
	'Callback','screentool recenter');
setdisplayrect = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[43.68 77 188.4 22], ...
        'String','Displayed at Current Rect', ...
        'Tag','DisplayedAtCurrentRectBt',...
	'Callback','screentool displaycurrentrect');
editparams = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[43.68 55.13 141.5 19.78], ...
        'String','Edit Params & Reload', ...
        'Style','checkbox', ...
        'Tag','EditParamsReloadCB',...
	'Value',1);
if userectlist,
editbt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[434 217 56 21], ...
        'String','Edit', ...
        'Tag','Pushbutton1',...
	'Callback','screentool edit');
else, editbt = [];
end;
plotcurrrect = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[205 242.5 132 22], ...
        'String','Plot Current Rect', ...
        'Style','checkbox', ...
        'Tag','Pushbutton1',...
	'Callback','screentool plotcurr');
h1 = uicontrol('Parent',h0,...
	'Units','pixels',...
	'BackgroundColor',[0.8 0.8 0.8],...
	'FontWeight', 'bold', ...
	'Listboxtop',0,...
	'Position',[205 213 62 22],...
	'String','Mon. Dist:',...
	'Tag','Pushbutton1',...
	'Style','Text',...
	'Callback','');
mondist = uicontrol('Parent',h0,...
	'Units','pixels',...
	'BackgroundColor',[1 1 1],...
	'FontWeight', 'bold', ...
	'Listboxtop',0,...
	'Position',[272 215 62 22],...
	'String','57',...
	'Tag','Pushbutton1',...
	'Style','Edit',...
	'Callback','');
screeninfo = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[30 356 150 19.78], ...
        'String','Screen is 0x0', ...
        'Style','text', ...
        'Tag','StaticText3');
if ~userectlist,
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[350 380 140 19.78], ...
        'String','Optic disk locations (deg):', 'FontWeight','bold',...
		'HorizontalAlignment','left',...
        'Style','text', ...
        'Tag','StaticText3');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[390 360 30 19.78], ...
		'HorizontalAlignment','center',...
        'String','Vert', ...
        'Style','text', ...
        'Tag','StaticText3');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[440 360 30 19.78], ...
		'HorizontalAlignment','center',...
        'String','Hort', ...
        'Style','text', ...
        'Tag','StaticText3');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[350 340 30 19.78], ...
		'HorizontalAlignment','center',...
        'String','left', ...
        'Style','text', ...
        'Tag','StaticText3');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[350 320 30 19.78], ...
		'HorizontalAlignment','center',...
        'String','right', ...
        'Style','text', ...
        'Tag','StaticText3');
lftVt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8]/0.8, ...
        'ListboxTop',0, ...
        'Position',[385 342 40 19.78], ...
		'HorizontalAlignment','center',...
        'String','', ...
        'Style','Edit', ...
        'Tag','leftVertEdit');
lftHt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8]/0.8, ...
        'ListboxTop',0, ...
        'Position',[435 342 40 19.78], ...
		'HorizontalAlignment','center',...
        'String','', ...
        'Style','Edit', ...
        'Tag','leftHortEdit');
rgtVt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8]/0.8, ...
        'ListboxTop',0, ...
        'Position',[385 322 40 19.78], ...
		'HorizontalAlignment','center',...
        'String','', ...
        'Style','Edit', ...
        'Tag','rightVertEdit');
rgtHt = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8]/0.8, ...
        'ListboxTop',0, ...
        'Position',[435 322 40 19.78], ...
		'HorizontalAlignment','center',...
        'String','', ...
        'Style','Edit', ...
        'Tag','rightHortEdit');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[350 298 140 19.78], ...
        'String','Monitor position (cm):', 'FontWeight','bold',...
		'HorizontalAlignment','left',...
        'Style','text', ...
        'Tag','StaticText3');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[350 280 40 19.78], ...
		'HorizontalAlignment','center',...
        'String','Hort/X', ...
        'Style','text', ...
        'Tag','StaticText3');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[400 280 47 19.78], ...
		'HorizontalAlignment','center',...
        'String','Depth/Y', ...
        'Style','text', ...
        'Tag','StaticText3');
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[460 280 40 19.78], ...
		'HorizontalAlignment','center',...
        'String','Vert/Z', ...
        'Style','text', ...
        'Tag','StaticText3');
monposx = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8]/0.8, ...
        'ListboxTop',0, ...
        'Position',[350 260 40 19.78], ...
		'HorizontalAlignment','center',...
        'String','', ...
        'Style','Edit', ...
        'Tag','MonPosXEdit');
monposy = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8]/0.8, ...
        'ListboxTop',0, ...
        'Position',[400 260 47 19.78], ...
		'HorizontalAlignment','center',...
        'String','', ...
        'Style','Edit', ...
        'Tag','MonPosYEdit');
monposz = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8]/0.8, ...
        'ListboxTop',0, ...
        'Position',[460 260 40 19.78], ...
		'HorizontalAlignment','center',...
        'String','', ...
        'Style','Edit', ...
        'Tag','MonPosZEdit');
end;

set(h0,'UserData',struct('lb',lb,'exportvar',exportvar,'importvar',importvar,...
			'screeninfo',screeninfo,'edit',editbt,...
			'plotcurrrect',plotcurrrect,'changeautosave',...
			changeautosave,'editparams',editparams,...
			'setdisplayrect',setdisplayrect,'recenter',...
			recenterbt,'operateon',operateon,'plotonwindow',...
			plotonwindow,'updateremwind',updateremwindbt,...
			'help','helpbt','getrectrem',getrectrembt,...
			'setrectrem',setrectrembt,'drag',dragbt,'load',...
			loadbt,'makecurr',makecurr,'saveas',saveasbt,'add',...
			addbt,'delete',deletebt,'ax',ax,'currrect',currrect,...
			'autosavedir',autosavedir,'screensize',screensize,...
			'screentoolsrects',[],'plotsonwindowclear',...
			plotsonwindowclear,...
			'RFmtextinfo',rfmti,'RFmgetinfo',rfmgit,...
			'RFmnewstim',rfmmst,'RFmstart',rfmbbt,...
			'RFmstop',rfmebt,'tag','screentool',...
			'mondist',mondist));

function makeNewFig(figNum)

h0 = figure('Color',[0.8 0.8 0.8], ...
        'PaperPosition',[18 180 576 432], ...
        'PaperUnits','points', ...
        'Position',[402 204 350 239], ...
        'Tag','Fig2', ...
        'ToolBar','none', ...
        'MenuBar','none');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[71.2 9.6 63.2 24.8], ...
        'String','OK', ...
        'Tag','Pushbutton1','Callback','screentool(''RFNewOK'',getfield(get(gcbf,''UserData''),''parentFig''));');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',14, ...
        'FontWeight','bold', ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[14.4 40 50.4 19.2], ...
        'String','Name:', ...
        'Style','text', ...
        'Tag','StaticText1');
namectl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'ListboxTop',0, ...
        'Position',[68.8 37.6 197.6 24.8], ...
        'Style','edit', ...,
        'HorizontalAlignment','left',...
        'Tag','EditText1');
lb = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'Position',[19.2 80 244 77.6], ...
        'String',cat(2,NewStimScriptList,NewStimList), ...
        'Style','listbox', ...
        'Tag','Listbox1', ...
        'Value',1);
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',14, ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[10.4 163.2 100.8 17.6], ...
        'String','script or stim type:', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Position',[152.8 9.6 63.2 24.8], ...
        'String','Cancel', ...
        'Tag','Pushbutton1','Callback','close(gcbf);');
set(h0,'UserData',struct('lb',lb,'name',namectl,'parentFig',figNum,...
	'thisfig',h0));

