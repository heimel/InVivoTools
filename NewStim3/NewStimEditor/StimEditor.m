function StimEditor(figNum,soefig)

%  NewStim package
%
%  STIMEDITOR
%
%  StimEditor brings up an editor for NewStim stimulus objects.  It allows
%  one to graphically browse stimulus objects in memory and perform several
%  operations on them.  These operations are the following:
%
%  Update             - Update the editor's list of stimuli.  This is useful if
%                       a non-graphical script creates a stimulus that the
%                       editor is not aware of.
%  Help               - Display this file.
%  New                - Create a new stimulus.
%  Open File          - Load a file into matlab; if stimuli are in this file
%                       they will show up in the editor.
%  Save               - Save the currently selected stimuli to a file.
%  Save All           - Save the entire list of stimuli to a file.
%  Load               - Tell the stimulus to load its images into memory.
%  Unload             - Unload the images from memory (frees up memory)
%  Strip              - Disconnects stimulus from images in memory
%  Edit displayprefs  - Edit the displayprefs objects of the selected stimuli.
%  Replace            - Replace the current selected stimulus with a new one.
%                       (only available when a single stimulus is selected.)
%  Delete             - Remove the currently selected stimuli from memory.
%  Delete all         - Remove the entire list of stimuli from memory.
%
%  One may also use
%
%  STIMEDITOR(FIGNUM)
%
%  to tell the StimEditor to open in a particular figure.  The figure will be
%  cleared.
%

if nargin==0
    fig=figure;
    set(fig,'MenuBar','none','NumberTitle','off','Name','StimEditor');
    drawStimEditor(fig);
    StimEditor('Update',fig);
elseif ~ischar(figNum) % is the call described above
    fig = figNum; 
    figure(fig); 
    clf; 
    set(fig,'MenuBar','none');
    drawStimEditor(fig); 
    StimEditor('Update',fig);
else % it is a callback
    command = figNum;
    theFig = gcbf;
    if isempty(theFig) && nargin~=2
        theFig = gcf;
    elseif nargin==2
        theFig = soefig;
    end
    stimedstruct = get(theFig,'UserData');
    lb = stimedstruct.lb;
    switch command
        case 'Update'
            g = listofvars('stimulus');
            set(lb,'String',g,'value',[]);
            StimEditor('EnableDisable',theFig);
        case 'Help'
            g = help('StimEditor');
            textbox('StimEditor help',g);
        case 'New'
            makeNewFig(gcbf);
        case 'NewOK'
            newstr = get(gcbf,'UserData');
            str = get(newstr.name,'String');
            ty = char(lb_getselected(newstr.lb));
            str = newstimname(str,ty);
            if isempty(str)
                return
            end
            evalin('base',[str '=' ty  '(''graphical'');']);
            close(gcbf);
            figure(newstr.parentFig);
            StimEditor Update;
        case 'OpenFile'
            [fname,pathn] = uigetfile('*','Open file...');
            if fname(1)~=0
                evalin('base',['load ' pathn fname]);
            end
            StimEditor Update;
            z=geteditor('ScriptEditor');
            if z
                ScriptEditor('Update',z);
            end
        case 'Save'
            strs = lb_getselected(lb);
            if ~isempty(strs)
                varnames = catCellStr(strs);
                [fname,pathn]=uiputfile('*.mat','Save stims as...');
                if fname(1)~=0
                    evalin('base',['save ' pathn fname ' ' varnames]);
                end
            end
        case 'SaveAll'
            strs = get(lb,'String');
            if ~isempty(strs)
                varnames = catCellStr(strs);
                [fname,pathn]=uiputfile('*.mat','Save stims as...');
                if fname(1)~=0
                    evalin('base',['save ' pathn fname ' ' varnames]);
                end
            end
        case 'Load'
            % should only happen if psychtoolbox available
            strs = lb_getselected(lb);
            if ~isempty(strs)
                for i=1:length(strs)
                    g = char(strs(i));
                    evalin('base',[g '=loadstim(' g ');']);
                end
            end
        case 'Unload'
            % should only happen if psychtoolbox available
            strs = lb_getselected(lb);
            if ~isempty(strs)
                for i=1:length(strs)
                    g = char(strs(i));
                    evalin('base',[g '=unloadstim(' g ');']);
                end
            end
        case 'Strip'
            % should only happen if psychtoolbox available
            strs = lb_getselected(lb);
            if ~isempty(strs)
                for i=1:length(strs)
                    g = char(strs(i));
                    evalin('base',[g '=strip(' g ');']);
                end
            end
        case 'EditDisplayPrefs'
            strs = lb_getselected(lb);
            dpl = repmat(displayprefs({}),0,0);
            for i=1:length(strs)
                g = char(strs(i));
                stim=evalin('base',g);
                dpl(i)=getdisplayprefs(stim);
            end
            dpln = editdisplayprefs(dpl);
            if ~isempty(dpln)
                for i=1:length(strs)
                    g = char(strs(i));
                    assignin('base','t__dp',dpln(i));
                    evalin('base',[g '=setdisplayprefs(' g ',t__dp);']);
                    evalin('base','clear t__dp');
                end
            end
        case 'MakeScript'
            % should only occur when 1 stimulus is selected
            strs = lb_getselected(lb);
            namenotfound=1;
            prompt={'Name of new script:'}; def = {''};
            dlgTitle = 'New script name...';lineNo=1;
            while (namenotfound)
                answ=inputdlg(prompt,dlgTitle,lineNo,def);
                an = char(answ);
                if isempty(answ)
                    namenotfound = 0; %cancelled
                    continue
                end
                if isempty(an)
                    an = ['scr_' strs{1}];
                end
                if ~isvarname(an) % syntax err
                    uiwait(errordlg('Syntax error in name'));
                else % okay, make the script
                    script = stimscript(0);
                    for i=1:length(strs)
                        g = char(strs(i));
                        stim = evalin('base',g);
                        script=append(script,stim);
                    end
                    namenotfound = 0;
                    assignin('base',an,script);
                end
            end
            StimEditor Update;
            z = geteditor('ScriptEditor');
            if ~isempty(z) 
                ScriptEditor('Update',z); 
            end
        case 'Replace'  % should really be renamed NewBasedOn
            % should only occur when 1 stimulus is selected
            g = lb_getselected(lb);
            g = char(g);
            namenotfound = 1;
            prompt={'Name of new stimulus:'}; 
            def = { newstimname('',g) };
            dlgTitle = 'New stimulus name...';
            lineNo=1;
            while (namenotfound)
                answ = inputdlg(prompt,dlgTitle,lineNo,def);
                if isempty(answ)
                    namenotfound = 0; %cancelled
                elseif ~isvarname(char(answ)) % syntax err
                    uiwait(errordlg('Syntax error in name'));
                else % okay, make the stim
                    namenotfound = 0;
                    tempStim = evalin('base',g);
                    ty = class(tempStim);
                    eval(['nS=' ty '(''graphical'',tempStim);']);
                    if ~isempty(nS)
                        assignin('base',char(answ),nS);
                    end
                end
            end
            StimEditor Update;
        case 'Show'
            strs = lb_getselected(lb);
            for i = 1:length(strs)
                evalin('base',['NSLoadAndRunTest(' strs{i} ',false);']);
            end
        case 'Delete'
            strs = lb_getselected(lb);
            if ~isempty(strs)
                varnames = catCellStr(strs);
                evalin('base',['clear ' varnames]);
            end
            set(lb,'value',[]);
            StimEditor Update;
        case 'DeleteAll'
            strs=get(lb,'String');
            if ~isempty(strs)
                varnames=catCellStr(strs);
                evalin('base',['clear ' varnames]);
            end
            set(lb,'value',[]);
            StimEditor Update;
        case 'Close'
            close(gcbf);
        case 'EnableDisable'
            strs = get(lb,'String');
            if ~isempty(strs)
                set(stimedstruct.saveall,'enable','on');
                set(stimedstruct.deleteall,'enable','on');
            else
                set(stimedstruct.saveall,'enable','off');
                set(stimedstruct.deleteall,'enable','off');
            end
            strs = lb_getselected(lb);
            if ~isempty(strs)
                set(stimedstruct.save,'enable','on');
                set(stimedstruct.delete,'enable','on');
                set(stimedstruct.editdp,'enable','on');
                set(stimedstruct.makescript,'enable','on');
                if length(strs)==1
                    set(stimedstruct.replace,'enable','on');
                else
                    set(stimedstruct.replace,'enable','off');
                end
                if haspsychtbox
                    set(stimedstruct.show,'enable','on');
                    set(stimedstruct.load,'enable','on');
                    set(stimedstruct.unload,'enable','on');
                    set(stimedstruct.strip,'enable','on');
                else
                    set(stimedstruct.show,'enable','off');
                    set(stimedstruct.load,'enable','off');
                    set(stimedstruct.unload,'enable','off');
                    set(stimedstruct.strip,'enable','off');
                end
            else
                set(stimedstruct.save,'enable','off');
                set(stimedstruct.delete,'enable','off');
                set(stimedstruct.editdp,'enable','off');
                set(stimedstruct.replace,'enable','off');
                set(stimedstruct.makescript,'enable','off');
                set(stimedstruct.load,'enable','off');
                set(stimedstruct.strip,'enable','off');
                set(stimedstruct.show,'enable','off');
                set(stimedstruct.unload,'enable','off');
            end
            if ~haspsychtbox
                set(stimedstruct.load,'enable','off');
                set(stimedstruct.show,'enable','off');
                set(stimedstruct.strip,'enable','off');
                set(stimedstruct.unload,'enable','off');
            end
    end
end

function drawStimEditor(h0)
set(h0,'WindowStyle','Normal',...
    'Units','points', ...
    'Color',[0.8 0.8 0.8], ...
    'MenuBar','none', ...
    'PaperPosition',[18 180 576 432], ...
    'PaperUnits','points', ...
    'Position',[145. 261. 503. 261.], ...
    'Tag','Fig1');
settoolbar(h0,'none');
lb = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[1 1 1], ...
    'Callback','StimEditor EnableDisable', ...
    'Max',2, ...
    'Position',[270.88 10.566 211.325 232.457], ...
    'String','', ...
    'Style','listbox', ...
    'Tag','Listbox1', ...
    'Value',[]);
showbt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor Show', ...
    'Enable','off',...
'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[16.329 211 112.386 22.093], ...
    'String','Show locally', ...
    'Tag','Pushbutton1');
updatebt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor Update', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[16.329 183.4685 112.386 22.093], ...
    'String','Update', ...
    'Tag','Pushbutton1');
helpbt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor Help', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[133.5190  183.4686  112.3865   22.0931], ...
    'String','Help', ...
    'Tag','Pushbutton1');
newbt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor New', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[16.329 156.57265 112.3865 21.1325 ], ...
    'String','New', ...
    'Tag','Pushbutton1');
openbt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor OpenFile', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[16.329 130.63 112.3865 21.1325], ...
    'String','Open File', ...
    'Tag','Pushbutton1');
savebt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor Save', ...
    'Enable','off', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[16.3296 36.5015994 112.3865 22.093], ...
    'String','Save', ...
    'Tag','Pushbutton1');
saveallbt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor SaveAll', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[ 133.5190   37.4622  112.3865   21.1325], ...
    'String','Save All', ...
    'Tag','Pushbutton1');
loadbt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor Load', ...
    'Enable','off', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[133.5190  130.6373  112.3865   21.1325], ...
    'String','Load', ...
    'Tag','Pushbutton1');
stripbt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor Strip', ...
    'Enable','off', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[133.5190   97.0174  112.3865   21.1325], ...
    'String','Strip', ...
    'Tag','Pushbutton1');
editdpbt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor EditDisplayPrefs', ...
    'Enable','off', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[16.329 64.358 112.3865 21.1325 ], ...
    'String','Edit displayprefs', ...
    'Tag','Pushbutton1');
makescriptbt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor MakeScript', ...
    'Enable','off', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[133.5190 64.358 112.3865 21.1325 ], ...
    'String','New Script with...', ...
    'Tag','Pushbutton1','Callback', 'StimEditor MakeScript');
unloadbt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor Unload', ...
    'Enable','off', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[16.3297 97.0174 112.3865 22.093 ], ...
    'String','Unload', ...
    'Tag','Pushbutton1');
replacebt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor Replace', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[133.5190  156.5727  112.3865   21.1325], ...
    'String','New based on...', ...
    'Tag','Pushbutton1');
deletebt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor Delete', ...
    'Enable','off', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[16.3297   13.4480  112.3865   21.1325], ...
    'String','Delete', ...
    'Tag','Pushbutton1');
deleteallbt = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'Callback','StimEditor DeleteAll', ...
    'FontWeight','bold', ...
    'ListboxTop',0, ...
    'Position',[133.5190   12.4874  112.3865   22.0931], ...
    'String','Delete All', ...
    'Tag','Pushbutton1');
set(h0,'UserData',struct('lb',lb,'update',updatebt,'help',helpbt,'new',newbt,...
    'openfile',openbt,'save',savebt,'saveall',saveallbt,...
    'load',loadbt,'editdp',editdpbt,'replace',replacebt,...
    'delete',deletebt,'deleteall',deleteallbt,'strip',stripbt,...
    'unload',unloadbt,'makescript',makescriptbt,'show',showbt,'tag','StimEditor'));

function makeNewFig(figNum)
n_lines = max(length(NewStimList),20);
rowheight = 12;

h0 = figure('Name','New stimulus',...
    'WindowStyle','Normal',...
    'NumberTitle','off',...
    'Color',[0.8 0.8 0.8], ...
    'PaperPosition',[18 180 576 432], ...
    'PaperUnits','points', ...
    'Position',[402 204 350 200+rowheight*n_lines], ...
    'Tag','Fig2', ...
    'MenuBar','none');
settoolbar(h0,'none');
uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'ListboxTop',0, ...
    'Position',[71.2 9.6 63.2 24.8], ...
    'String','OK', ...
    'Tag','Pushbutton1','Callback','StimEditor NewOK');
uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'FontSize',14, ...
    'FontWeight','bold', ...
    'HorizontalAlignment','left', ...
    'ListboxTop',0, ...
    'Position',[14.4 40 50.4 19.2], ...
    'String','Name:', ...
    'Style','text', ...
    'Tag','StaticText1');
namectl = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[1 1 1], ...
    'ListboxTop',0, ...
    'Position',[68.8 37.6 197.6 24.8], ...
    'Style','edit', ...,
    'HorizontalAlignment','left',...
    'Tag','EditText1');
lb = uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[1 1 1], ...
    'Position',[19.2 80 244 rowheight*n_lines], ...
    'String',NewStimList, ...
    'Style','listbox', ...
    'Tag','Listbox1', ...
    'Value',1);
uicontrol('Parent',h0, ...
    'Units','points', ...
    'BackgroundColor',[0.8 0.8 0.8], ...
    'ListboxTop',0, ...
    'Position',[152.8 9.6 63.2 24.8], ...
    'String','Cancel', ...
    'Tag','Pushbutton1','Callback','close(gcbf);');
set(h0,'UserData',struct('lb',lb,'name',namectl,'parentFig',figNum));



function str = newstimname(str,ty)
if isempty(str)
    str = [ty(1:min(10,end)) '_' datestr(now,30)]; % truncating, because matlab 5 has variable length restrictions
end
 if exist(str)>1 %#ok<EXIST>
     errormsg(['Stim name ''' str ''' already used by matlab.']);
     str = '';
     return
 end
if ~isvarname(str)
    errormsg(['Stim name ''' str ''' is not a valid variable name.']);
    str = '';
    return
end

